
(std, asm, elf, sys, util) -> {

    rodata = {
        hello_world = util.utf8("Hello, world!\n")
        bye         = util.utf8("bye!\n")

        :hello_world_addr: hello_world
        :bye_addr:         bye
    }

    data = {
        :counter: std.U(8, 0)
    }

    text = (rodata, data) -> {

        # TODO: seccomp2 ourselves down to just sys_write and sys_exit

        util.print(rodata.hello_world_addr, rodata.hello_world.len)

        util.loop(2, {
            util.print(rodata.bye_addr, rodata.bye.len)
        })

        sys.exit(42)

        # signal to the user that this process should be terminated, if
        # not already done so
        :terminated:
        asm.jmp_1b(terminated)
    }

    elf.linux(rodata, data, text)
}
