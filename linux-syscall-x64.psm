(std, asm) -> {
    sys_exit  = 1
    sys_write = 4

    fd_stdout = 1

    # FIXME: cannot use curried form because non-closing over env
    # variables in the block
    arg1 = (var) -> asm.mov_ebx(var)
    arg2 = (var) -> asm.mov_ecx(var)
    arg3 = (var) -> asm.mov_edx(var)

    call = (num) -> {
        sysnum = (var) -> asm.mov_eax(var)
        sysint = std.Bin(2, "cd 80")

        sysnum(num)
        sysint()
    }

    exit = (status) -> {
        arg1(status)
        call(sys_exit)
    }

    write = (fd, address, length) -> {
        arg1(fd)
        arg2(address)
        arg3(length)
        call(sys_write)
    }
}
