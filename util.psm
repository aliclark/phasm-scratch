(std, asm, sys) -> {

    # library code should prefer passing around these (or these but
    # with the label number instead of raw bin as value)

    ascii = (string) -> {
        str = string
        size = std.AsciiLength(string)
        bin = std.Ascii(size, str)
        bin
    }

    utf8 = (string) -> {
        str = string
        size = std.Utf8Length(string)
        bin = std.Utf8(size, str)
        bin
    }

    "Maybe even a similar concept for numbers:
    i32 = (n) -> {
        num = n
        size = 4
        bin = std.S(4, n)
        bin
    }
"

    print = (address, size) -> {
        sys.write(sys.fd_stdout, address, size)
    }

    loop = (n, code) -> {
        asm.push("rax")
        asm.mov("rax", 0)

        :loop:
        asm.cmp_rax_s8(n)
        asm.jge_s8(end)

        asm.push("rax")

        code()

        asm.pop("rax")

        asm.add_rax_s8(1)
        asm.jmp_s8(loop)

        :end:
    }
}
